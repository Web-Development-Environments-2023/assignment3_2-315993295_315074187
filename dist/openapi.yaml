openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.65.211"
  description: SwaggerHub API Auto Mocking hey
tags:
- name: Auth
  description: All authentication related routes.
- name: Users
  description: All the user's personal app info.
- name: Recipes
  description: All recipes general info and creation.

paths:
  /recipes/{recipeId}: # Theirs
    get:
      tags:
      - Recipes
      summary: Return preview details on recipe by his ID
      description: Return preview details on recipe by his ID
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
  /register: # Theirs
    post:
      tags:
      - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the new user.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /login: # Theirs
    post:
      tags:
      - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description:
            User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Authentication failed
  /logout: # Theirs
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "The user has been successfully logged out."  
  /recipes/search:
    get:
      tags:
        - Recipes
      parameters:
        - in: query
          name: Search_text
          description: The search string that will be used
          schema:
            type: string
            example: Simple potatoes in the oven
          required: true
        - in: query
          name: Num_of_results
          description: Integer. Limited to 5, 10, or 15 (default 5). Used to specify the number of recipes to be returned.
          schema:
            type: integer
            example: 10
            default: 5
            enum:
              - 5
              - 10
              - 15
          required: true
        - in: query
          name: cuisines
          description: String of possible cuisine(s) of the recipes.
          schema:
            type: array
            items:
              type: string
              enum:
                - African
                - Asian
                - American
                - British
                - Cajun
                - Caribbean
                - Chinese
                - Eastern European
                - European
                - French
                - German
                - Greek
                - Indian
                - Irish
                - Italian
                - Japanese
                - Jewish
                - Korean
                - Latin American
                - Mediterranean
                - Mexican
                - Middle Eastern
                - Nordic
                - Southern
                - Spanish
                - Thai
                - Vietnamese
        - in: query
          name: diets
          description: String of possible diet(s) of the recipes.
          schema:
            type: array
            items:
              type: string
              enum:
                - Gluten Free
                - Ketogenic
                - Vegetarian
                - Lacto-Vegetarian
                - Ovo-Vegetarian
                - Vegan
                - Pescetarian
                - Paleo
                - Primal
                - Low FODMAP
                - Whole30
        - in: query
          name: intolerances
          description: "String representing a comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered."
          schema:
            type: array
            items:
              type: string
              enum:
                - Dairy
                - Egg
                - Gluten
                - Grain
                - Peanut
                - Seafood
                - Sesame
                - Shellfish
                - Soy
                - Sulfite
                - Tree Nut
                - Wheat
      responses:
        '200':
          description: Returned search results.
  /recipes/recipe_creation: # Ours
    post:
      tags:
        - Recipes
      description: This path is used to input a recipe's details and create a new recipe in the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        "201":
          description: Recipe created successfully.
        "400":
          description: Invalid request or parameters.
        "401":
          description: User not logged in.
        "409":
          description: Recipe name taken
  /users/favorites: # Theirs
    get:
      tags:
      - Users
      summary: Return the favorite recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's favorites recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the favorites list of a user
      description: save recipe in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeId:
                  type: string
                  description: recipe's id which the user saved
                  example: 1
      responses:
        "201":
          description: The Recipe successfully saved as favorite
        "401":
          description: user is not authorized 
      security:
      - cookieAuth: []
  /users/created_recipes: # Ours
    get:
        tags:
        - Users
        summary: Return the recipes that were saved by user
        description: Get an array of recipes that were saved by a specific user
        responses:
          "200":
            description: data about the user's recipes returned
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/RecipePreview'
          "401":
            description: user is not authorized
        security:
        - cookieAuth: []
  /users/familyrecipes: # Ours
    get:
      tags:
      - Users
      summary: Return the family recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's family recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the family list of a user
      description: save recipe in the family list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeId:
                  type: string
                  description: recipe's id which the user saved
                  example: 1
      responses:
        "201":
          description: The Recipe successfully saved as family recipe
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/watched: # Ours
      get:
        tags:
        - Users
        summary: Return the watched recipes that were saved by user
        description: Get an array of recipes that were watched by a specific user
        responses:
          "200":
            description: data about the user's watched recipes returned
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/RecipePreview'
          "401":
            description: user is not authorized
        security:
        - cookieAuth: []
      post:
        tags:
        - Users
        summary: save recipe in the watched list of a user
        description: save recipe in the watched list of a user
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  recipeId:
                    type: string
                    description: recipe's id which the user watched
                    example: 716429
        responses:
          "201":
            description: The Recipe successfully saved as watched recipe
          "401":
            description: user is not authorized       
        security:
        - cookieAuth: []

components:
  schemas:
    User: # Theirs
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: my_name
        firstname:
          type: string
          description: user's first name
          example: my_first_name
        lastname:
          type: string
          description: user's last name
          example: my_last_name
        country:
          type: string
          description: user's country
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: my_name@12
        email:
          pattern: email
          type: string
          description: user's email
          example: my_name12@gmail.com
      description: Model containing user info  
    LoginScheme: # Theirs
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: my_name
          description: username conatins letters only
        password:
          maxLength: 10
          minLength: 5
          description: password conatins at least one number and one special char
          example: my_name@12
          format: password     
    RecipePreview: # Theirs
      type: object
      properties:
        name:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
    Search: # Ours
      type: object
      properties:
        Search_text:
          description: The search string that will be used
          type: string
          example: Simple potatoes in the oven
          required: true
        Num_of_results:
          type: number
          description: Integer. Limited to 5, 10 or 15 (default 5). Used to specify the number of recipes to be returned.
          example: 10
          required: true
          enum:
          - 5
          - 10
          - 15
        cuisnes:
          type: array
          description: String of possible cuisine(s) of the recipes.
          example: Jewish
          items:
            type: string
            enum:
              - African
              - Asian
              - American
              - British
              - Cajun
              - Caribbean
              - Chinese
              - Eastern European
              - European
              - French
              - German
              - Greek
              - Indian
              - Irish
              - Italian
              - Japanese
              - Jewish
              - Korean
              - Latin American
              - Mediterranean
              - Mexican
              - Middle Eastern
              - Nordic
              - Southern
              - Spanish
              - Thai
              - Vietnamese
        diets:
          description: String of possible diet(s) of the recipes.
          type: array
          items:
            type: string
            example: Primal
            enum:
              - Gluten Free
              - Ketogenic
              - Vegetarian
              - Lacto-Vegetarian
              - Ovo-Vegetarian
              - Vegan
              - Pescetarian
              - Paleo
              - Primal
              - Low FODMAP
              - Whole30
        intolerances:
          description: "String representing a comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered."
          type: array
          example: Egg
          items:
            type: string
            enum:
              - Dairy
              - Egg
              - Gluten
              - Grain
              - Peanut
              - Seafood
              - Sesame
              - Shellfish
              - Soy
              - Sulfite
              - Tree Nut
              - Wheat
    Recipe: # Ours
      type: object
      allOf:
        - $ref: '#/components/schemas/RecipePreview'
        - type: object      
      properties:
        ingredients:
          type: array
          description: List of ingredients for the recipe
          items:
            type: string
          example:
            - "Three ounces of salt"
        preperation_steps:
          type: string
          description: steps to prepare the recipe
          example: Po-tay-toes! Boil em, mash em, stick em in a stew
        num_of_servings:
          type: integer
          description: number of servings for the recipe
          example: 4        
      description: Recipe details and information.
